(assume |ExtTrigEqDef TLA__SetSt_flatnd_1| (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))))
(assume h2 (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_))
(assume |SetStDef TLA__SetSt_flatnd_1| (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))))))
(assume |Goal| (not (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))))
(step t5 (cl (not (not (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))) (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule not_not)
(step t6 (cl (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule th_resolution :premises (t5 |Goal|))
(anchor :step t7 :args ((:= (smt__x Idv) veriT_vr52) (:= (smt__y Idv) veriT_vr53))) 
(step t7.t1 (cl (= smt__x veriT_vr52)) :rule refl)
(step t7.t2 (cl (= smt__y veriT_vr53)) :rule refl)
(step t7.t3 (cl (= (smt__TLA__TrigEq_Idv smt__x smt__y) (smt__TLA__TrigEq_Idv veriT_vr52 veriT_vr53))) :rule cong :premises (t7.t1 t7.t2))
(step t7.t4 (cl (= smt__x veriT_vr52)) :rule refl)
(step t7.t5 (cl (= smt__y veriT_vr53)) :rule refl)
(step t7.t6 (cl (= (= smt__x smt__y) (= veriT_vr52 veriT_vr53))) :rule cong :premises (t7.t4 t7.t5))
(step t7.t7 (cl (= (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y)) (= (smt__TLA__TrigEq_Idv veriT_vr52 veriT_vr53) (= veriT_vr52 veriT_vr53)))) :rule cong :premises (t7.t3 t7.t6))
(step t7 (cl (= (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (forall ((veriT_vr52 Idv) (veriT_vr53 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr52 veriT_vr53) (= veriT_vr52 veriT_vr53))))) :rule bind)
(step t8 (cl (not (= (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y))) (forall ((veriT_vr52 Idv) (veriT_vr53 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr52 veriT_vr53) (= veriT_vr52 veriT_vr53))))) (not (forall ((smt__x Idv) (smt__y Idv)) (= (smt__TLA__TrigEq_Idv smt__x smt__y) (= smt__x smt__y)))) (forall ((veriT_vr52 Idv) (veriT_vr53 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr52 veriT_vr53) (= veriT_vr52 veriT_vr53)))) :rule equiv_pos2)
(step t9 (cl (forall ((veriT_vr52 Idv) (veriT_vr53 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr52 veriT_vr53) (= veriT_vr52 veriT_vr53)))) :rule th_resolution :premises (|ExtTrigEqDef Idv| t7 t8))
(anchor :step t10 :args ((:= (veriT_vr52 Idv) veriT_vr54) (:= (veriT_vr53 Idv) veriT_vr55)))
(step t10.t1 (cl (= veriT_vr52 veriT_vr54)) :rule refl)
(step t10.t2 (cl (= veriT_vr53 veriT_vr55)) :rule refl)
(step t10.t3 (cl (= (smt__TLA__TrigEq_Idv veriT_vr52 veriT_vr53) (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55))) :rule cong :premises (t10.t1 t10.t2))
(step t10.t4 (cl (= veriT_vr52 veriT_vr54)) :rule refl)
(step t10.t5 (cl (= veriT_vr53 veriT_vr55)) :rule refl)
(step t10.t6 (cl (= (= veriT_vr52 veriT_vr53) (= veriT_vr54 veriT_vr55))) :rule cong :premises (t10.t4 t10.t5))
(step t10.t7 (cl (= (= (smt__TLA__TrigEq_Idv veriT_vr52 veriT_vr53) (= veriT_vr52 veriT_vr53)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) :rule cong :premises (t10.t3 t10.t6))
(step t10 (cl (= (forall ((veriT_vr52 Idv) (veriT_vr53 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr52 veriT_vr53) (= veriT_vr52 veriT_vr53))) (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55))))) :rule bind)
(step t11 (cl (not (= (forall ((veriT_vr52 Idv) (veriT_vr53 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr52 veriT_vr53) (= veriT_vr52 veriT_vr53))) (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55))))) (not (forall ((veriT_vr52 Idv) (veriT_vr53 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr52 veriT_vr53) (= veriT_vr52 veriT_vr53)))) (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) :rule equiv_pos2)
(step t12 (cl (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) :rule th_resolution :premises (t9 t10 t11))
(anchor :step t13 :args ((:= (smt__a Idv) veriT_vr56) (:= (smt__x Idv) veriT_vr57)))
(step t13.t1 (cl (= smt__x veriT_vr57)) :rule refl)
(step t13.t2 (cl (= smt__a veriT_vr56)) :rule refl)
(step t13.t3 (cl (= (smt__TLA__SetSt_flatnd_1 smt__a) (smt__TLA__SetSt_flatnd_1 veriT_vr56))) :rule cong :premises (t13.t2))
(step t13.t4 (cl (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (smt__TLA__Mem veriT_vr57 (smt__TLA__SetSt_flatnd_1 veriT_vr56)))) :rule cong :premises (t13.t1 t13.t3))
(step t13.t5 (cl (= smt__x veriT_vr57)) :rule refl)
(step t13.t6 (cl (= smt__a veriT_vr56)) :rule refl)
(step t13.t7 (cl (= (smt__TLA__Mem smt__x smt__a) (smt__TLA__Mem veriT_vr57 veriT_vr56))) :rule cong :premises (t13.t5 t13.t6))
(step t13.t8 (cl (= smt__x veriT_vr57)) :rule refl)
(step t13.t9 (cl (= smt__x veriT_vr57)) :rule refl)
(step t13.t10 (cl (= (smt__TLA__FunApp smt__CONSTANT_f_ smt__x) (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57))) :rule cong :premises (t13.t9))
(step t13.t11 (cl (= (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)) (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57)))) :rule cong :premises (t13.t8 t13.t10))
(step t13.t12 (cl (= (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x))) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57))))) :rule cong :premises (t13.t11))
(step t13.t13 (cl (= (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))) (and (smt__TLA__Mem veriT_vr57 veriT_vr56) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57)))))) :rule cong :premises (t13.t7 t13.t12))
(step t13.t14 (cl (= (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x))))) (= (smt__TLA__Mem veriT_vr57 (smt__TLA__SetSt_flatnd_1 veriT_vr56)) (and (smt__TLA__Mem veriT_vr57 veriT_vr56) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57))))))) :rule cong :premises (t13.t4 t13.t13))
(step t13 (cl (= (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))))) (forall ((veriT_vr56 Idv) (veriT_vr57 Idv)) (= (smt__TLA__Mem veriT_vr57 (smt__TLA__SetSt_flatnd_1 veriT_vr56)) (and (smt__TLA__Mem veriT_vr57 veriT_vr56) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57)))))))) :rule bind)
(step t14 (cl (not (= (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x)))))) (forall ((veriT_vr56 Idv) (veriT_vr57 Idv)) (= (smt__TLA__Mem veriT_vr57 (smt__TLA__SetSt_flatnd_1 veriT_vr56)) (and (smt__TLA__Mem veriT_vr57 veriT_vr56) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57)))))))) (not (forall ((smt__a Idv) (smt__x Idv)) (= (smt__TLA__Mem smt__x (smt__TLA__SetSt_flatnd_1 smt__a)) (and (smt__TLA__Mem smt__x smt__a) (not (smt__TLA__Mem smt__x (smt__TLA__FunApp smt__CONSTANT_f_ smt__x))))))) (forall ((veriT_vr56 Idv) (veriT_vr57 Idv)) (= (smt__TLA__Mem veriT_vr57 (smt__TLA__SetSt_flatnd_1 veriT_vr56)) (and (smt__TLA__Mem veriT_vr57 veriT_vr56) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57))))))) :rule equiv_pos2)
(step t15 (cl (forall ((veriT_vr56 Idv) (veriT_vr57 Idv)) (= (smt__TLA__Mem veriT_vr57 (smt__TLA__SetSt_flatnd_1 veriT_vr56)) (and (smt__TLA__Mem veriT_vr57 veriT_vr56) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57))))))) :rule th_resolution :premises (|SetStDef TLA__SetSt_flatnd_1| t13 t14))
(anchor :step t16 :args ((:= (veriT_vr56 Idv) veriT_vr58) (:= (veriT_vr57 Idv) veriT_vr59)))
(step t16.t1 (cl (= veriT_vr57 veriT_vr59)) :rule refl)
(step t16.t2 (cl (= veriT_vr56 veriT_vr58)) :rule refl)
(step t16.t3 (cl (= (smt__TLA__SetSt_flatnd_1 veriT_vr56) (smt__TLA__SetSt_flatnd_1 veriT_vr58))) :rule cong :premises (t16.t2))
(step t16.t4 (cl (= (smt__TLA__Mem veriT_vr57 (smt__TLA__SetSt_flatnd_1 veriT_vr56)) (smt__TLA__Mem veriT_vr59 (smt__TLA__SetSt_flatnd_1 veriT_vr58)))) :rule cong :premises (t16.t1 t16.t3))
(step t16.t5 (cl (= veriT_vr57 veriT_vr59)) :rule refl)
(step t16.t6 (cl (= veriT_vr56 veriT_vr58)) :rule refl)
(step t16.t7 (cl (= (smt__TLA__Mem veriT_vr57 veriT_vr56) (smt__TLA__Mem veriT_vr59 veriT_vr58))) :rule cong :premises (t16.t5 t16.t6))
(step t16.t8 (cl (= veriT_vr57 veriT_vr59)) :rule refl)
(step t16.t9 (cl (= veriT_vr57 veriT_vr59)) :rule refl)
(step t16.t10 (cl (= (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57) (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr59))) :rule cong :premises (t16.t9))
(step t16.t11 (cl (= (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57)) (smt__TLA__Mem veriT_vr59 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr59)))) :rule cong :premises (t16.t8 t16.t10))
(step t16.t12 (cl (= (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57))) (not (smt__TLA__Mem veriT_vr59 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr59))))) :rule cong :premises (t16.t11))
(step t16.t13 (cl (= (and (smt__TLA__Mem veriT_vr57 veriT_vr56) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57)))) (and (smt__TLA__Mem veriT_vr59 veriT_vr58) (not (smt__TLA__Mem veriT_vr59 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr59)))))) :rule cong :premises (t16.t7 t16.t12))
(step t16.t14 (cl (= (= (smt__TLA__Mem veriT_vr57 (smt__TLA__SetSt_flatnd_1 veriT_vr56)) (and (smt__TLA__Mem veriT_vr57 veriT_vr56) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57))))) (= (smt__TLA__Mem veriT_vr59 (smt__TLA__SetSt_flatnd_1 veriT_vr58)) (and (smt__TLA__Mem veriT_vr59 veriT_vr58) (not (smt__TLA__Mem veriT_vr59 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr59))))))) :rule cong :premises (t16.t4 t16.t13))
(step t16 (cl (= (forall ((veriT_vr56 Idv) (veriT_vr57 Idv)) (= (smt__TLA__Mem veriT_vr57 (smt__TLA__SetSt_flatnd_1 veriT_vr56)) (and (smt__TLA__Mem veriT_vr57 veriT_vr56) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57)))))) (forall ((veriT_vr58 Idv) (veriT_vr59 Idv)) (= (smt__TLA__Mem veriT_vr59 (smt__TLA__SetSt_flatnd_1 veriT_vr58)) (and (smt__TLA__Mem veriT_vr59 veriT_vr58) (not (smt__TLA__Mem veriT_vr59 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr59)))))))) :rule bind)
(step t17 (cl (not (= (forall ((veriT_vr56 Idv) (veriT_vr57 Idv)) (= (smt__TLA__Mem veriT_vr57 (smt__TLA__SetSt_flatnd_1 veriT_vr56)) (and (smt__TLA__Mem veriT_vr57 veriT_vr56) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57)))))) (forall ((veriT_vr58 Idv) (veriT_vr59 Idv)) (= (smt__TLA__Mem veriT_vr59 (smt__TLA__SetSt_flatnd_1 veriT_vr58)) (and (smt__TLA__Mem veriT_vr59 veriT_vr58) (not (smt__TLA__Mem veriT_vr59 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr59)))))))) (not (forall ((veriT_vr56 Idv) (veriT_vr57 Idv)) (= (smt__TLA__Mem veriT_vr57 (smt__TLA__SetSt_flatnd_1 veriT_vr56)) (and (smt__TLA__Mem veriT_vr57 veriT_vr56) (not (smt__TLA__Mem veriT_vr57 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr57))))))) (forall ((veriT_vr58 Idv) (veriT_vr59 Idv)) (= (smt__TLA__Mem veriT_vr59 (smt__TLA__SetSt_flatnd_1 veriT_vr58)) (and (smt__TLA__Mem veriT_vr59 veriT_vr58) (not (smt__TLA__Mem veriT_vr59 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr59))))))) :rule equiv_pos2)
(step t18 (cl (forall ((veriT_vr58 Idv) (veriT_vr59 Idv)) (= (smt__TLA__Mem veriT_vr59 (smt__TLA__SetSt_flatnd_1 veriT_vr58)) (and (smt__TLA__Mem veriT_vr59 veriT_vr58) (not (smt__TLA__Mem veriT_vr59 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr59))))))) :rule th_resolution :premises (t15 t16 t17))
(step t19 (cl (or (not (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (or (not (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55)) (= veriT_vr54 veriT_vr55))))) :rule qnt_cnf)
(step t20 (cl (not (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (or (not (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55)) (= veriT_vr54 veriT_vr55)))) :rule or :premises (t19))
(step t21 (cl (or (not (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (or (not (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55)) (= veriT_vr54 veriT_vr55)))) (or (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule forall_inst :args ((:= veriT_vr54 (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)) (:= veriT_vr55 (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))))
(step t22 (cl (not (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (or (not (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55)) (= veriT_vr54 veriT_vr55)))) (or (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule or :premises (t21))
(step t23 (cl (or (not (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) (or (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (not (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))))) :rule or_neg)
(step t24 (cl (not (not (not (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))))) (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) :rule not_not)
(step t25 (cl (or (not (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) (or (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) :rule th_resolution :premises (t24 t23))
(step t26 (cl (or (not (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) (or (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (or (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule or_neg)
(step t27 (cl (or (not (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) (or (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule th_resolution :premises (t20 t22 t25 t26))
(step t28 (cl (not (or (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule or_pos)
(step t29 (cl (not (forall ((veriT_vr54 Idv) (veriT_vr55 Idv)) (= (smt__TLA__TrigEq_Idv veriT_vr54 veriT_vr55) (= veriT_vr54 veriT_vr55)))) (or (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule or :premises (t27))
(step t30 (cl (not (or (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t28 t6))
(step t31 (cl (or (not (smt__TLA__TrigEq_Idv (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_) (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule resolution :premises (t29 t12))
(step t32 (cl (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t30 t31))
(step t33 (cl (or (not (forall ((veriT_vr58 Idv) (veriT_vr59 Idv)) (= (smt__TLA__Mem veriT_vr59 (smt__TLA__SetSt_flatnd_1 veriT_vr58)) (and (smt__TLA__Mem veriT_vr59 veriT_vr58) (not (smt__TLA__Mem veriT_vr59 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr59))))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))))) :rule forall_inst :args ((:= veriT_vr58 smt__CONSTANT_S_) (:= veriT_vr59 smt__CONSTANT_x_)))
(step t34 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) :rule and_pos)
(step t35 (cl (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule and_neg)
(step t36 (cl (not (not (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule not_not)
(step t37 (cl (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (not (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_)) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule th_resolution :premises (t36 t35))
(step t38 (cl (not (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (not (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule equiv_pos1)
(step t39 (cl (not (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))))) :rule equiv_pos2)
(step t40 (cl (not (forall ((veriT_vr58 Idv) (veriT_vr59 Idv)) (= (smt__TLA__Mem veriT_vr59 (smt__TLA__SetSt_flatnd_1 veriT_vr58)) (and (smt__TLA__Mem veriT_vr59 veriT_vr58) (not (smt__TLA__Mem veriT_vr59 (smt__TLA__FunApp smt__CONSTANT_f_ veriT_vr59))))))) (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule or :premises (t33))
(step t41 (cl (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t37 h2))
(step t42 (cl (= (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)) (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule resolution :premises (t40 t18))
(step t43 (cl (not (= smt__CONSTANT_x_ smt__CONSTANT_x_)) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule eq_congruent_pred)
(step t44 (cl (= smt__CONSTANT_x_ smt__CONSTANT_x_)) :rule eq_reflexive)
(step t45 (cl (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule th_resolution :premises (t43 t44))
(step t46 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t45 t32))
(step t47 (cl (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) :rule resolution :premises (t46 t38 t41 t42))
(step t48 (cl (not (and (smt__TLA__Mem smt__CONSTANT_x_ smt__CONSTANT_S_) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_)))))) :rule resolution :premises (t34 t47))
(step t49 (cl (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_)))) :rule resolution :premises (t39 t48 t42))
(step t50 (cl (not (= smt__CONSTANT_x_ smt__CONSTANT_x_)) (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule eq_congruent_pred)
(step t51 (cl (not (= (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_) (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (not (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__FunApp smt__CONSTANT_f_ smt__CONSTANT_x_))) (smt__TLA__Mem smt__CONSTANT_x_ (smt__TLA__SetSt_flatnd_1 smt__CONSTANT_S_))) :rule th_resolution :premises (t50 t44))
(step t52 (cl) :rule resolution :premises (t51 t32 t49 t47))