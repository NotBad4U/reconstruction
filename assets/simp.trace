(assume h1 (not (not (not (not (f A))))))
(step t2 (cl (not (not (not (not (not (f A)))))) (not (not (f A)))) :rule not_not)
(step t3 (cl (not (not (f A)))) :rule th_resolution :premises (t2 h1))
(step t4 (cl (not (not (not (f A)))) (f A)) :rule not_not)
(step t5 (cl (f A)) :rule th_resolution :premises (t4 t3))
(assume h6 (g A))
(assume h7 (or (not (g A)) (not (f A)) (not (f A))))
(step t8 (cl (= (or (not (g A)) (not (f A)) (not (f A))) (or (not (g A)) (not (f A))))) :rule ac_simp)
(step t9 (cl (not (= (or (not (g A)) (not (f A)) (not (f A))) (or (not (g A)) (not (f A))))) (not (or (not (g A)) (not (f A)) (not (f A)))) (or (not (g A)) (not (f A)))) :rule equiv_pos2)
(step t10 (cl (or (not (g A)) (not (f A)))) :rule th_resolution :premises (h7 t8 t9))
(step t11 (cl (not (g A)) (not (f A))) :rule or :premises (t10))
(step t12 (cl) :rule resolution :premises (t11 t5 h6))